
<div class="bg-white rounded-lg overflow-hidden shadow-md w-100">
  <div class=" overflow-y-auto" id="chat-messages" style="height: 75vh;">

      <div class="col-sm-3 col-xs-12">
        <div class="col-inside-lg decor-default chat" style="overflow: hidden; outline: none;" tabindex="5000">
          <div class="chat-users">
            
              <div class="user">
                  <div class="avatar">
                  <img src="https://bootdey.com/img/Content/avatar/avatar1.png" alt="User name">
                  <div class="status online"></div>
                  <%# off online %>
                  </div>
                  <div class="name">Food Bot</div>
                  <div class="mood">Active</div>
              </div>
            <hr class="border-t border-gray-300 shadow-md">
          </div>
        </div>
      </div>

      

      <div class="col-sm-9 col-xs-12 chat" style="overflow: hidden; outline: none;" tabindex="5001">
        <div class="col-inside-lg decor-default">

          <div class="chat-body">
            <div class="answer left">
              <div class="avatar">
                <img src="https://bootdey.com/img/Content/avatar/avatar1.png" alt="Bot">
                <div class="status online"></div>
              </div>
              <div class="name">Bot</div>
              <div class="text">
                Hello, How can I help you?
              </div>
              <div class="time">5 min ago</div>
            </div>
          </div>


        </div>
      </div>
  </div>
</div>

<div class=" relative my-[-10px] px-20 flex p-4 bg-gray-200">
  <input type="text" id="message-input" placeholder="Type your message..." class="flex-1 py-2 px-4 border rounded-l-lg">
  <button onclick="sendMessage()" class="bg-gray-700 text-white py-2 px-4 rounded-r-lg">Send</button>
  <button onclick="sendImage()" class="bg-gray-700 text-white py-2 ml-2 px-4 rounded-lg">Generate</button>
  <button onclick="audioMessage()" class="bg-gray-700 text-white py-2 ml-2 px-4 rounded-lg">Speak</button>
  <button onclick="sendEmbedding()" class="bg-gray-700 text-white py-2 ml-2 px-4 rounded-lg">Embedding</button>
  <input type="file" id="fileInput" onchange="handleFileUpload()">
</div>

<script>
  function handleFileUpload() {
    // Get the file input element
    var fileInput = document.getElementById('fileInput');
    var chatBody = document.querySelector('.chat-body');
    var chatMessages = document.getElementById('chat-messages');

    // Display user message
    displayMessage(fileInput.files[0].name, 'right', 'https://bootdey.com/img/Content/avatar/avatar2.png', 'User', 'online');

    // Check if files are selected
    if (fileInput.files.length > 0) {
        // Get the first selected file
        var file = fileInput.files[0];

        // Create a FormData object to append the file
        var formData = new FormData();
        formData.append('file', file);

        // Use the Fetch API to send the file to the server
        fetch('/viber_webhook/receive', {
            method: 'POST',
            body: formData
        })
        .then(response => response.json())
        .then(data => {
            // Display the text output in the chat
            displayMessage(data.processed_file, 'left', 'https://bootdey.com/img/Content/avatar/avatar1.png', 'Bot', 'online');
            // Clear the input field
            document.getElementById('fileInput').value = '';
        })
        .catch(error => {
            console.error('Error uploading file:', error);
        });
    } else {
        console.warn('No files selected.');
    }
  }

  // Function to display a message in the chat
  function displayMessage(messageContent, alignment, userImage, userName, userStatus) {
      var chatBody = document.querySelector('.chat-body');
      var chatMessages = document.getElementById('chat-messages');

      var chatBubble = document.createElement('div');
      chatBubble.classList.add('answer', alignment);

      var avatarDiv = document.createElement('div');
      avatarDiv.classList.add('avatar');

      var img = document.createElement('img');
      img.src = userImage;
      img.alt = userName;

      var statusDiv = document.createElement('div');
      statusDiv.classList.add('status', userStatus);

      avatarDiv.appendChild(img);
      avatarDiv.appendChild(statusDiv);

      var nameDiv = document.createElement('div');
      nameDiv.classList.add('name');
      nameDiv.textContent = userName;

      var contentDiv = document.createElement('div');
      contentDiv.classList.add('content');

      // Display the text content
      var textDiv = document.createElement('div');
      textDiv.classList.add('text');
      textDiv.textContent = messageContent;
      contentDiv.appendChild(textDiv);

      var timeDiv = document.createElement('div');
      timeDiv.classList.add('time');
      timeDiv.textContent = 'Just now';

      chatBubble.appendChild(avatarDiv);
      chatBubble.appendChild(nameDiv);
      chatBubble.appendChild(contentDiv);
      chatBubble.appendChild(timeDiv);

      chatBody.appendChild(chatBubble);

      // Scroll to the bottom of the chat
      chatMessages.scrollTop = chatMessages.scrollHeight;
  }
</script>

         
<script>

  function playBotAudio() {
    // You would fetch the audio URL from the server response
    var audioUrl = 'http://commondatastorage.googleapis.com/codeskulptor-demos/DDR_assets/Kangaroo_MusiQue_-_The_Neverwritten_Role_Playing_Game.mp3';

    var audioElement = document.getElementById('botAudio');
    audioElement.src = audioUrl;
    audioElement.play();
  }
</script>


<script>
  function sendMessage() {
    var userInput = document.getElementById('message-input').value;
    var chatBody = document.querySelector('.chat-body');
    var chatMessages = document.getElementById('chat-messages');

    // Clear the input field
    document.getElementById('message-input').value = '';

    // Display user message
    displayMessage(userInput, 'right', 'https://bootdey.com/img/Content/avatar/avatar2.png', 'User', 'online');

    // Send user message to the server
    fetch('/viber_webhook/receive', {
      method: 'POST',
      headers: {
        'Content-Type': 'application/json',
      },
      body: JSON.stringify({ message: userInput }),
    })
    .then(response => response.json())
    .then(data => {
      // Display bot response
      displayMessage(data.bot_response, 'left', 'https://bootdey.com/img/Content/avatar/avatar1.png', 'Bot', 'online');
      
      // Scroll to the bottom of the chat
      chatMessages.scrollTop = chatMessages.scrollHeight;
    })
    .catch(error => console.error('Error:', error));

    function displayMessage(messageText, alignment, userImage, userName, userStatus) {
      var chatBubble = document.createElement('div');
      chatBubble.classList.add('answer', alignment);

      var avatarDiv = document.createElement('div');
      avatarDiv.classList.add('avatar');

      var img = document.createElement('img');
      img.src = userImage; // Use the provided user image URL
      img.alt = userName;

      var statusDiv = document.createElement('div');
      statusDiv.classList.add('status', userStatus);

      avatarDiv.appendChild(img);
      avatarDiv.appendChild(statusDiv);

      var nameDiv = document.createElement('div');
      nameDiv.classList.add('name');
      nameDiv.textContent = userName;

      var textDiv = document.createElement('div');
      textDiv.classList.add('text');
      textDiv.textContent = messageText;

      var timeDiv = document.createElement('div');
      timeDiv.classList.add('time');
      timeDiv.textContent = 'Just now';

      chatBubble.appendChild(avatarDiv);
      chatBubble.appendChild(nameDiv);
      chatBubble.appendChild(textDiv);
      chatBubble.appendChild(timeDiv);

      chatBody.appendChild(chatBubble);
    }

  }
  
</script>

<script>
  function sendEmbedding() {
    var userInput = document.getElementById('message-input').value;
    var chatBody = document.querySelector('.chat-body');
    var chatMessages = document.getElementById('chat-messages');

    // Clear the input field
    document.getElementById('message-input').value = '';

    // Display user message
    displayMessage(userInput, 'right', 'https://bootdey.com/img/Content/avatar/avatar2.png', 'User', 'online');

    // Send user message to the server
    fetch('/viber_webhook/receive', {
      method: 'POST',
      headers: {
        'Content-Type': 'application/json',
      },
      body: JSON.stringify({ message: userInput, embedding: "embedding" }),
    })
    .then(response => response.json())
    .then(data => {
      // Display bot response
      displayMessage(data.embedding_response, 'left', 'https://bootdey.com/img/Content/avatar/avatar1.png', 'Bot', 'online');
      
      // Scroll to the bottom of the chat
      chatMessages.scrollTop = chatMessages.scrollHeight;
    })
    .catch(error => console.error('Error:', error));

    function displayMessage(messageText, alignment, userImage, userName, userStatus) {
      var chatBubble = document.createElement('div');
      chatBubble.classList.add('answer', alignment);

      var avatarDiv = document.createElement('div');
      avatarDiv.classList.add('avatar');

      var img = document.createElement('img');
      img.src = userImage; // Use the provided user image URL
      img.alt = userName;

      var statusDiv = document.createElement('div');
      statusDiv.classList.add('status', userStatus);

      avatarDiv.appendChild(img);
      avatarDiv.appendChild(statusDiv);

      var nameDiv = document.createElement('div');
      nameDiv.classList.add('name');
      nameDiv.textContent = userName;

      var textDiv = document.createElement('div');
      textDiv.classList.add('text');
      textDiv.textContent = messageText;

      var timeDiv = document.createElement('div');
      timeDiv.classList.add('time');
      timeDiv.textContent = 'Just now';

      chatBubble.appendChild(avatarDiv);
      chatBubble.appendChild(nameDiv);
      chatBubble.appendChild(textDiv);
      chatBubble.appendChild(timeDiv);

      chatBody.appendChild(chatBubble);
    }

  }
  
</script>

<script>
  async function isValidImageUrl(url) {
    return new Promise((resolve) => {
      var img = new Image();
      img.onload = function () {
        resolve(img.width !== 0 && img.height !== 0);
      };
      img.onerror = function () {
        resolve(false);
      };
      img.src = url;
    });
  }

  async function sendImage() {
    var userInput = document.getElementById('message-input').value;
    var chatBody = document.querySelector('.chat-body');
    var chatMessages = document.getElementById('chat-messages');

    // Clear the input field
    document.getElementById('message-input').value = '';

    // Display user message
    displayMessage(userInput, 'right', 'https://bootdey.com/img/Content/avatar/avatar2.png', 'User', 'online');

    // Send user message to the server
    fetch('/viber_webhook/receive', {
      method: 'POST',
      headers: {
        'Content-Type': 'application/json',
      },
      body: JSON.stringify({ message: userInput, image: "generate" }),
    })
      .then(response => response.json())
      .then(data => {
        // Display bot response
        displayMessage(data.generated_image, 'left', 'https://bootdey.com/img/Content/avatar/avatar1.png', 'Bot', 'online');

        // Scroll to the bottom of the chat
        chatMessages.scrollTop = chatMessages.scrollHeight;
      })
      .catch(error => console.error('Error:', error));

    async function displayMessage(messageContent, alignment, userImage, userName, userStatus) {
      var chatBubble = document.createElement('div');
      chatBubble.classList.add('answer', alignment);

      var avatarDiv = document.createElement('div');
      avatarDiv.classList.add('avatar');

      var img = document.createElement('img');
      img.src = userImage; // Use the provided user image URL
      img.alt = userName;

      var statusDiv = document.createElement('div');
      statusDiv.classList.add('status', userStatus);

      avatarDiv.appendChild(img);
      avatarDiv.appendChild(statusDiv);

      var nameDiv = document.createElement('div');
      nameDiv.classList.add('name');
      nameDiv.textContent = userName;

      var contentDiv = document.createElement('div');
      contentDiv.classList.add('content');

      // Check if the message content is an image URL
      if (messageContent.startsWith('http://') || messageContent.startsWith('https://')) {
        try {
          const isValid = await isValidImageUrl(messageContent);
          if (isValid) {
            //Valid image URL;
            var image = document.createElement('img');
            image.src = messageContent;
            contentDiv.appendChild(image);
          } else {
            //Invalid image URL

            var textDiv = document.createElement('div');
            textDiv.classList.add('text');
            textDiv.textContent = messageContent;
            contentDiv.appendChild(textDiv);
          }
        } catch (error) {
          console.error('Error checking image URL:', error);
        }
      } else {
        //Not a URL

        var textDiv = document.createElement('div');
        textDiv.classList.add('text');
        textDiv.textContent = messageContent;
        contentDiv.appendChild(textDiv);
      }

      var timeDiv = document.createElement('div');
      timeDiv.classList.add('time');
      timeDiv.textContent = 'Just now';

      chatBubble.appendChild(avatarDiv);
      chatBubble.appendChild(nameDiv);
      chatBubble.appendChild(contentDiv);
      chatBubble.appendChild(timeDiv);

      chatBody.appendChild(chatBubble);

      // Scroll to the bottom of the chat
      chatMessages.scrollTop = chatMessages.scrollHeight;
    }
  }
      
</script>

<script>
  async function isValidAudioUrl(url) {
  return new Promise((resolve) => {
    var audio = new Audio();

    audio.oncanplaythrough = function () {
      console.log('Audio can play through.');
      resolve(true);
    };

    audio.onerror = function (error) {
      console.error('Audio error:', error);
      resolve(false);
    };

    audio.src = url;
    });
  }


  async function audioMessage() {
    var userInput = document.getElementById('message-input').value;
    var chatBody = document.querySelector('.chat-body');
    var chatMessages = document.getElementById('chat-messages');

    // Clear the input field
    document.getElementById('message-input').value = '';

    // Display user message
    displayMessage(userInput, 'right', 'https://bootdey.com/img/Content/avatar/avatar2.png', 'User', 'online');

    // Send user message to the server
    fetch('/viber_webhook/receive', {
      method: 'POST',
      headers: {
        'Content-Type': 'application/json',
      },
      body: JSON.stringify({ message: userInput, audio: "speak" }),
    })
      .then(response => response.json())
      .then(data => {
        // Display bot response
        displayMessage(data.processed_audio, 'left', 'https://bootdey.com/img/Content/avatar/avatar1.png', 'Bot', 'online');

        // Scroll to the bottom of the chat
        chatMessages.scrollTop = chatMessages.scrollHeight;
      })
      .catch(error => console.error('Error:', error));

    async function displayMessage(messageContent, alignment, userImage, userName, userStatus) {
      var chatBubble = document.createElement('div');
      chatBubble.classList.add('answer', alignment);

      var avatarDiv = document.createElement('div');
      avatarDiv.classList.add('avatar');

      var img = document.createElement('img');
      img.src = userImage; // Use the provided user image URL
      img.alt = userName;

      var statusDiv = document.createElement('div');
      statusDiv.classList.add('status', userStatus);

      avatarDiv.appendChild(img);
      avatarDiv.appendChild(statusDiv);

      var nameDiv = document.createElement('div');
      nameDiv.classList.add('name');
      nameDiv.textContent = userName;

      var contentDiv = document.createElement('div');
      contentDiv.classList.add('content');
    
      // Check if the message content is audio URL
    if (messageContent.endsWith('mp3')) {
      try {
        const isAudio = await isValidAudioUrl(messageContent);
        if (isAudio) {
          // Valid audio URL
          var audio = document.createElement('audio');
          audio.controls = true; // Add controls to play/pause audio
          audio.src = messageContent;
          contentDiv.appendChild(audio);
        } else {
          // Invalid audio URL
          var textDiv = document.createElement('div');
          textDiv.classList.add('text');
          textDiv.textContent = 'Invalid audio URL'; // Provide a message for invalid URLs
          contentDiv.appendChild(textDiv);
        }
      } catch (error) {
        console.error('Error checking audio URL:', error);
      }
    } else {
      // Not an audio URL
      var textDiv = document.createElement('div');
      textDiv.classList.add('text');
      textDiv.textContent = messageContent;
      contentDiv.appendChild(textDiv);
    }



      var timeDiv = document.createElement('div');
      timeDiv.classList.add('time');
      timeDiv.textContent = 'Just now';

      chatBubble.appendChild(avatarDiv);
      chatBubble.appendChild(nameDiv);
      chatBubble.appendChild(contentDiv);
      chatBubble.appendChild(timeDiv);

      chatBody.appendChild(chatBubble);

      // Scroll to the bottom of the chat
      chatMessages.scrollTop = chatMessages.scrollHeight;
    }
  }
      
</script>


